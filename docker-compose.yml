version: '3.8'

services:
  # Golden Agent Framework
  golden-agent:
    build: .
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - ORG_NAME=${ORG_NAME:-GoldenAgent}
      - CENTRAL_MCP_GATEWAY_URL=${CENTRAL_MCP_GATEWAY_URL:-http://mcp-gateway:8080}
      - CENTRAL_LLM_GATEWAY_URL=${CENTRAL_LLM_GATEWAY_URL:-http://llm-gateway:8081}
      - DEFAULT_EMBEDDING_MODEL=${DEFAULT_EMBEDDING_MODEL:-text-embedding-ada-002}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      - mcp-gateway
      - llm-gateway
      - postgres
      - redis
    networks:
      - golden-agent-network

  # MCP Gateway
  mcp-gateway:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    ports:
      - "8080:8080"
    environment:
      - LOG_LEVEL=INFO
    networks:
      - golden-agent-network

  # LLM Gateway
  llm-gateway:
    build:
      context: .
      dockerfile: Dockerfile.llm
    ports:
      - "8081:8081"
    environment:
      - LOG_LEVEL=INFO
    networks:
      - golden-agent-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: golden_agent
      POSTGRES_USER: golden_agent
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-golden_agent_password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - golden-agent-network

  # Redis for caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - golden-agent-network

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - golden-agent-network

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - golden-agent-network

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  golden-agent-network:
    driver: bridge
